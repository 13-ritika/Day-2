// https://leetcode.com/problems/largest-perimeter-triangle/ 

// Approach 1
class Solution {
    public int largestPerimeter(int[] nums) {
        Arrays.sort(nums);
        for(int i = nums.length - 3; i >= 0; i--) {
            if(nums[i] + nums[i + 1] > nums[i + 2])
                return nums[i] + nums[i + 1] + nums[i + 2];
        }
        return 0;
    }
}

// Approach 2

class Solution {
public boolean isValid(int a, int b, int c) {
    if(a + b >c && b + c > a && a + c > b)
        return true;
    return false;
}
public int largestPerimeter(int[] nums) {

  Arrays.sort(nums);
	int last = nums.length;
	for (int i = last - 1; i >= 2; i--) {
		if (isValid(nums[i], nums[i - 1], nums[i - 2]))
			return nums[i] + nums[i - 1] + nums[i - 2];
	}

	return 0;
}

}
